management.endpoints.enabled=false
management.endpoint.health.enabled=true
management.endpoints.web.base-path=/
management.endpoints.web.path-mapping.health=healthcheck

logging.level.uk.gov.companieshouse.ordernotification=DEBUG

spring.kafka.bootstrap-servers = ${KAFKA_BROKER_ADDR}
uk.gov.companieshouse.order-notification-sender.error-consumer = ${IS_ERROR_QUEUE_CONSUMER}

application-namespace = order-notification-sender
kafka.topics.email-send = email-send
# order-received
kafka.topics.order-received = order-received
kafka.topics.order-received_group = ${application-namespace}-${kafka.topics.order-received}
kafka.topics.order-received-retry = order-received-notification-retry
kafka.topics.order-received-retry-group = ${application-namespace}-${kafka.topics.order-received-retry}
kafka.topics.order-received-error = order-received-notification-error
kafka.topics.order-received-error-group = ${application-namespace}-${kafka.topics.order-received-error}
# item-group-processed-send
kafka.topics.item-group-processed-send = item-group-processed-send
kafka.topics.item-group-processed-send-group = ${application-namespace}-${kafka.topics.item-group-processed-send}
kafka.topics.item-group-processed-send.invalid_message_topic = ${kafka.topics.item-group-processed-send}-invalid
kafka.topics.item-group-processed-send.max_attempts = #{${MAXIMUM_RETRIES:3} + 1}
kafka.topics.item-group-processed-send.backoff_delay = ${BACKOFF_DELAY:100}

filingHistory.dateFormat = dd MMMM yyyy

email.dateFormat = dd MMMM yyyy
email.senderAddress = ${EMAIL_SENDER_ADDRESS}
email.paymentDateFormat = dd MMMM yyyy - HH:mm:ss
email.applicationId = order_notification_sender
email.confirmationMessage = Confirmation of your order number {0}
email.dispatchDays = ${DISPATCH_DAYS}
email.messageId = order_notification_sender_summary
email.messageType = order_notification_sender_summary
email.filingHistoryDateFormat = dd MMM yyyy
email.chsUrl = ${CHS_URL}

item-ready-email.messageId = digital_item_ready
item-ready-email.messageType = digital_item_ready
item-ready-email.subject = Your digital item {0} from order {1} is ready

kafkaProducer.producerTimeout = ${KAFKA_PRODUCER_TIMEOUT}
maximum.retries = ${MAXIMUM_RETRIES}

chs.kafka.api.url=${CHS_KAFKA_API_URL:}
